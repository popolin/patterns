{"version":3,"sources":["CurrencyConverter.js","App.js"],"names":["CurrencyConverter","base","to","API_KEY","target","name","descriptor","fn","value","args","result","call","url","toUpperCase","resultRate","currencyRate","data","err","console","log","Cost","compute","qty","price","Promise","resolve","then"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA,MAAMA,iBAAiB,GAAG,CAACC,IAAD,EAAOC,EAAP,KAAc;AACpC,QAAMC,OAAO,GAAG,sBAAhB;AAEA,SAAO,UAASC,MAAT,EAAiBC,IAAjB,EAAuBC,UAAvB,EAAkC;AACrC,QAAI;AACA,YAAMC,EAAE,GAAGD,UAAU,CAACE,KAAtB,CADA,CAC6B;AAE7B;;AACAF,MAAAA,UAAU,CAACE,KAAX,GAAmB,OAAM,GAAGC,IAAT,KAAkB;AACjC;AACA,cAAMC,MAAM,GAAG,MAAMH,EAAE,CAACI,IAAH,CAAQ,IAAR,EAAc,GAAGF,IAAjB,CAArB;AACA,cAAMG,GAAG,GAAI,8CAA6CV,EAAE,CAACW,WAAH,EAAiB,IAAGZ,IAAI,CAACY,WAAL,EAAmB,qBAAoBV,OAAQ,EAA7H;AACA,cAAMW,UAAU,GAAG,MAAM,oBAAMF,GAAN,CAAzB;AACA,cAAMG,YAAY,GAAGD,UAAU,CAACE,IAAX,CAAiB,GAAEd,EAAE,CAACW,WAAH,EAAiB,IAAGZ,IAAI,CAACY,WAAL,EAAmB,EAA1D,EAA6D,KAA7D,CAArB;AAEA,eAAOH,MAAM,GAAGK,YAAhB;AACH,OARD;;AASA,aAAOT,UAAP;AACH,KAdD,CAcE,OAAMW,GAAN,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,GAlBD;AAmBH,CAtBD;;eAwBejB;;;;;;;AC1Bf;;;;;;IAEMoB,eACD,gCAAkB,KAAlB,EAAyB,KAAzB,aADL,MAAMA,IAAN,CAAW;AAEPC,EAAAA,OADA,CACQC,GADR,EACaC,KADb,EACmB;AACf,WAAOC,OAAO,CAACC,OAAR,CAAgBH,GAAG,GAAGC,KAAtB,CAAP;AACH;;AAJM;AAOX,MAAMA,KAAK,GAAG,IAAIH,IAAJ,EAAd;AACAG,KAAK,CAACF,OAAN,CAAc,EAAd,EAAkB,CAAlB,EAAqBK,IAArB,CAA0BhB,MAAM,IAAIQ,OAAO,CAACC,GAAR,CAAYT,MAAZ,CAApC","file":"App.js","sourceRoot":"..","sourcesContent":["import axios from 'axios';\n\nconst CurrencyConverter = (base, to) => {\n    const API_KEY = '8a9b48c6e4885622e874';\n\n    return function(target, name, descriptor){\n        try {\n            const fn = descriptor.value; // Funcão original\n\n            // Agora podemos redefinir o método para incluir novas funcionalidades e herdar a original:\n            descriptor.value = async(...args) => {\n                // Definir o decorator\n                const result = await fn.call(this, ...args);\n                const url = `https://free.currconv.com/api/v7/convert?q=${to.toUpperCase()}_${base.toUpperCase()}&compact=y&apiKey=${API_KEY}`\n                const resultRate = await axios(url);\n                const currencyRate = resultRate.data[`${to.toUpperCase()}_${base.toUpperCase()}`]['val'];\n\n                return result * currencyRate;\n            }\n            return descriptor;\n        } catch(err){\n            console.log(err);\n        }\n    }\n}\n\nexport default CurrencyConverter;","import CurrencyConverter from './CurrencyConverter';\n\nclass Cost {\n    @CurrencyConverter('BRL', 'USD')\n    compute(qty, price){\n        return Promise.resolve(qty * price);\n    }\n}\n\nconst price = new Cost();\nprice.compute(20, 5).then(result => console.log(result));"]}